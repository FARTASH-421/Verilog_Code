# //  ModelSim SE-64 DEV-main 4339427 Mar 31 2020 Linux 3.10.0-957.el7.x86_64
# //  Warning: This is a non-production build that will expire in 44 days on Fri May 15 00:00:00 2020
# //
# //  Copyright 1991-2020 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim SE-64 and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
do compile_all_and_simulate.do
# 
# 
# === Re-gen lib and compile uvvm_util source
# 
# Source path: ../../uvvm_util
# Target path: ../../uvvm_util/sim
# 
# Compiling uvvm_util source
# 
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work uvvm_util  ../../uvvm_util/script/../src/types_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work uvvm_util  ../../uvvm_util/script/../src/adaptations_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work uvvm_util  ../../uvvm_util/script/../src/string_methods_pkg.vhd
# ** Warning: ../../uvvm_util/script/../src/string_methods_pkg.vhd(434): (vcom-1515) Prefix of predefined attribute "length" is function call "remove_initial_chars".
# ** Warning: ../../uvvm_util/script/../src/string_methods_pkg.vhd(479): (vcom-1515) Prefix of predefined attribute "length" is function call "remove_initial_chars".
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work uvvm_util  ../../uvvm_util/script/../src/protected_types_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work uvvm_util  ../../uvvm_util/script/../src/global_signals_and_shared_variables_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work uvvm_util  ../../uvvm_util/script/../src/hierarchy_linked_list_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work uvvm_util  ../../uvvm_util/script/../src/alert_hierarchy_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work uvvm_util  ../../uvvm_util/script/../src/license_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work uvvm_util  ../../uvvm_util/script/../src/methods_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work uvvm_util  ../../uvvm_util/script/../src/bfm_common_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work uvvm_util  ../../uvvm_util/script/../src/uvvm_util_context.vhd
# 
# 
# === Re-gen lib and compile uvvm_vvc_framework source
# 
# Source path: ../../uvvm_vvc_framework
# Target path: ../../uvvm_vvc_framework/sim
# Mapping uvvm_util and uvvm_vvc_framework
# 
# Compiling uvvm_vvc_framework source
# 
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work uvvm_vvc_framework  ../../uvvm_vvc_framework/script/../src/ti_protected_types_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work uvvm_vvc_framework  ../../uvvm_vvc_framework/script/../src/ti_vvc_framework_support_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work uvvm_vvc_framework  ../../uvvm_vvc_framework/script/../src/ti_generic_queue_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work uvvm_vvc_framework  ../../uvvm_vvc_framework/script/../src/ti_data_queue_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work uvvm_vvc_framework  ../../uvvm_vvc_framework/script/../src/ti_data_fifo_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work uvvm_vvc_framework  ../../uvvm_vvc_framework/script/../src/ti_data_stack_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work uvvm_vvc_framework  ../../uvvm_vvc_framework/script/../src/ti_uvvm_engine.vhd
# 
# 
# === Re-gen lib and compile bitvis_vip_scoreboard source
# 
# Source path: ../../bitvis_vip_scoreboard
# Target path: ../../bitvis_vip_scoreboard/sim
# Mapping uvvm_util and uvvm_vvc_framework
# 
# Compiling bitvis_vip_scoreboard source
# 
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work bitvis_vip_scoreboard  ../../bitvis_vip_scoreboard/script/../src/generic_sb_support_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work bitvis_vip_scoreboard  ../../bitvis_vip_scoreboard/script/../src/generic_sb_pkg.vhd
# ** Warning: ../../bitvis_vip_scoreboard/script/../src/generic_sb_pkg.vhd(1656): (vcom-1515) Prefix of predefined attribute "length" is function call "to_string".
# ** Warning: ../../bitvis_vip_scoreboard/script/../src/generic_sb_pkg.vhd(1657): (vcom-1515) Prefix of predefined attribute "length" is function call "to_string".
# ** Warning: ../../bitvis_vip_scoreboard/script/../src/generic_sb_pkg.vhd(1673): (vcom-1515) Prefix of predefined attribute "length" is function call "to_string".
# ** Warning: ../../bitvis_vip_scoreboard/script/../src/generic_sb_pkg.vhd(1674): (vcom-1515) Prefix of predefined attribute "length" is function call "to_string".
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work bitvis_vip_scoreboard  ../../bitvis_vip_scoreboard/script/../src/predefined_sb.vhd
# 
# 
# === Re-gen lib and compile bitvis_vip_sbi source
# 
# Source path: ../../bitvis_vip_sbi
# Target path: ../../bitvis_vip_sbi/sim
# Mapping uvvm_util and uvvm_vvc_framework
# 
# Compiling bitvis_vip_sbi source
# 
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work bitvis_vip_sbi  ../../bitvis_vip_sbi/script/../src/transaction_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work bitvis_vip_sbi  ../../bitvis_vip_sbi/script/../src/sbi_bfm_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work bitvis_vip_sbi  ../../bitvis_vip_sbi/script/../src/vvc_cmd_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work bitvis_vip_sbi  ../../bitvis_vip_sbi/script/../../uvvm_vvc_framework/src_target_dependent/td_target_support_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work bitvis_vip_sbi  ../../bitvis_vip_sbi/script/../../uvvm_vvc_framework/src_target_dependent/td_vvc_framework_common_methods_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work bitvis_vip_sbi  ../../bitvis_vip_sbi/script/../src/vvc_methods_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work bitvis_vip_sbi  ../../bitvis_vip_sbi/script/../../uvvm_vvc_framework/src_target_dependent/td_queue_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work bitvis_vip_sbi  ../../bitvis_vip_sbi/script/../../uvvm_vvc_framework/src_target_dependent/td_vvc_entity_support_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work bitvis_vip_sbi  ../../bitvis_vip_sbi/script/../src/sbi_vvc.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work bitvis_vip_sbi  ../../bitvis_vip_sbi/script/../src/vvc_context.vhd
# 
# Default output directory
# 
# 
# === Re-gen lib and compile bitvis_irqc source
# 
# Source path: ..
# Target path: ../sim
# 
# Compiling bitvis_irqc source
# 
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work bitvis_irqc  ../script/../src/irqc_pif_pkg.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work bitvis_irqc  ../script/../src/irqc_pif.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work bitvis_irqc  ../script/../src/irqc_core.vhd
# eval vcom  -quiet -suppress 1346,1236,1090 -2008 -work bitvis_irqc  ../script/../src/irqc.vhd
# 
# Compiling TB
# 
# eval vcom  -quiet -suppress 1346,1236 -2008 -work bitvis_irqc  ../tb/irqc_demo_tb.vhd
# vsim bitvis_irqc.irqc_demo_tb 
# Start time: 16:08:39 on Mar 31,2020
# ** Note: (vsim-3812) Design is being optimized...
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.numeric_std(body)
# Loading std.env(body)
# Loading uvvm_util.types_pkg(body)
# Loading uvvm_util.adaptations_pkg(body)
# Loading ieee.math_real(body)
# Loading uvvm_util.string_methods_pkg(body)
# Loading uvvm_util.protected_types_pkg(body)
# Loading uvvm_util.global_signals_and_shared_variables_pkg
# Loading uvvm_util.hierarchy_linked_list_pkg(body)
# Loading uvvm_util.license_pkg(body)
# Loading uvvm_util.alert_hierarchy_pkg(body)
# Loading uvvm_util.methods_pkg(body)
# ** Note: 
# 
# 
# *****************************************************************************************************
#  This is a *** LICENSED PRODUCT *** as given in the LICENSE.TXT in the root directory.
# *****************************************************************************************************
# 
# 
#    Time: 0 ns  Iteration: 0  Region: /methods_pkg File: ../../uvvm_util/script/../src/methods_pkg.vhd
# ** Note: 
# 
# =====================================================================================================
# =====================================================================================================
# This info section may be turned off via C_SHOW_UVVM_UTILITY_LIBRARY_INFO in adaptations_pkg.vhd
# 
# Important Simulator setup: 
# - Set simulator to break on severity 'FAILURE' 
# - Set simulator transcript to a monospace font (e.g. Courier new)
# 
# UVVM Utility Library setup:
# - It is recommended to go through the two powerpoint presentations provided with the download
# - There is a Quick-Reference in the doc-directory
# - In order to change layout or behaviour - please check the src*/adaptations_pkg.vhd
#   This is intended for personal or company customization
# 
# License conditions are given in LICENSE.TXT
# =====================================================================================================
# =====================================================================================================
# 
# 
#    Time: 0 ns  Iteration: 0  Region: /methods_pkg File: ../../uvvm_util/script/../src/methods_pkg.vhd
# Loading uvvm_util.bfm_common_pkg(body)
# Loading bitvis_vip_sbi.sbi_bfm_pkg(body)
# Loading work.irqc_pif_pkg
# Loading work.irqc_demo_tb(func)#1
# ** UI-Msg: (vish-4014) No objects found matching '/irqc_demo_tb/i_irqc/i_irqc_core/p2c'.
# Executing ONERROR command at macro ./wave.do line 39
# ** UI-Msg: (vish-4014) No objects found matching '/irqc_demo_tb/i_irqc/i_irqc_core/c2p'.
# Executing ONERROR command at macro ./wave.do line 40
# UVVM:      
# UVVM:      --------------------------------------------------------------------------------------------------------------------------------------------------------------------
# UVVM:      ***  REPORT OF GLOBAL CTRL ***
# UVVM:      --------------------------------------------------------------------------------------------------------------------------------------------------------------------
# UVVM:                                IGNORE    STOP_LIMIT
# UVVM:                NOTE         :  REGARD         0
# UVVM:                TB_NOTE      :  REGARD         0
# UVVM:                WARNING      :  REGARD         0
# UVVM:                TB_WARNING   :  REGARD         0
# UVVM:                MANUAL_CHECK :  REGARD         0
# UVVM:                ERROR        :  REGARD         1
# UVVM:                TB_ERROR     :  REGARD         1
# UVVM:                FAILURE      :  REGARD         1
# UVVM:                TB_FAILURE   :  REGARD         1
# UVVM:      --------------------------------------------------------------------------------------------------------------------------------------------------------------------
# UVVM:      
# UVVM:      
# UVVM:      --------------------------------------------------------------------------------------------------------------------------------------------------------------------
# UVVM:      ***  REPORT OF MSG ID PANEL ***
# UVVM:      --------------------------------------------------------------------------------------------------------------------------------------------------------------------
# UVVM:                ID                             Status
# UVVM:                ------------------------       ------
# UVVM:                ID_UTIL_BURIED               : DISABLED
# UVVM:                ID_BITVIS_DEBUG              : DISABLED
# UVVM:                ID_UTIL_SETUP                : ENABLED
# UVVM:                ID_LOG_MSG_CTRL              : ENABLED
# UVVM:                ID_ALERT_CTRL                : ENABLED
# UVVM:                ID_FINISH_OR_STOP            : ENABLED
# UVVM:                ID_CLOCK_GEN                 : ENABLED
# UVVM:                ID_GEN_PULSE                 : ENABLED
# UVVM:                ID_BLOCKING                  : ENABLED
# UVVM:                ID_WATCHDOG                  : ENABLED
# UVVM:                ID_POS_ACK                   : ENABLED
# UVVM:                ID_LOG_HDR                   : ENABLED
# UVVM:                ID_LOG_HDR_LARGE             : ENABLED
# UVVM:                ID_LOG_HDR_XL                : ENABLED
# UVVM:                ID_SEQUENCER                 : ENABLED
# UVVM:                ID_SEQUENCER_SUB             : ENABLED
# UVVM:                ID_BFM                       : ENABLED
# UVVM:                ID_BFM_WAIT                  : ENABLED
# UVVM:                ID_BFM_POLL                  : ENABLED
# UVVM:                ID_BFM_POLL_SUMMARY          : ENABLED
# UVVM:                ID_TERMINATE_CMD             : ENABLED
# UVVM:                ID_SEGMENT_INITIATE          : ENABLED
# UVVM:                ID_SEGMENT_COMPLETE          : ENABLED
# UVVM:                ID_SEGMENT_HDR               : ENABLED
# UVVM:                ID_SEGMENT_DATA              : ENABLED
# UVVM:                ID_PACKET_INITIATE           : ENABLED
# UVVM:                ID_PACKET_COMPLETE           : ENABLED
# UVVM:                ID_PACKET_HDR                : ENABLED
# UVVM:                ID_PACKET_DATA               : ENABLED
# UVVM:                ID_FRAME_INITIATE            : ENABLED
# UVVM:                ID_FRAME_COMPLETE            : ENABLED
# UVVM:                ID_FRAME_HDR                 : ENABLED
# UVVM:                ID_FRAME_DATA                : ENABLED
# UVVM:                ID_COVERAGE_MAKEBIN          : DISABLED
# UVVM:                ID_COVERAGE_ADDBIN           : DISABLED
# UVVM:                ID_COVERAGE_ICOVER           : DISABLED
# UVVM:                ID_COVERAGE_CONFIG           : ENABLED
# UVVM:                ID_COVERAGE_SUMMARY          : ENABLED
# UVVM:                ID_COVERAGE_HOLES            : ENABLED
# UVVM:                ID_UVVM_SEND_CMD             : ENABLED
# UVVM:                ID_UVVM_CMD_ACK              : ENABLED
# UVVM:                ID_UVVM_CMD_RESULT           : ENABLED
# UVVM:                ID_CMD_INTERPRETER           : ENABLED
# UVVM:                ID_CMD_INTERPRETER_WAIT      : ENABLED
# UVVM:                ID_IMMEDIATE_CMD             : ENABLED
# UVVM:                ID_IMMEDIATE_CMD_WAIT        : ENABLED
# UVVM:                ID_CMD_EXECUTOR              : ENABLED
# UVVM:                ID_CMD_EXECUTOR_WAIT         : ENABLED
# UVVM:                ID_INSERTED_DELAY            : ENABLED
# UVVM:                ID_UVVM_DATA_QUEUE           : ENABLED
# UVVM:                ID_CONSTRUCTOR               : ENABLED
# UVVM:                ID_CONSTRUCTOR_SUB           : ENABLED
# UVVM:                ID_MONITOR                   : ENABLED
# UVVM:                ID_MONITOR_ERROR             : ENABLED
# UVVM:                ID_DATA                      : ENABLED
# UVVM:                ID_CTRL                      : ENABLED
# UVVM:                ID_FILE_PARSER               : ENABLED
# UVVM:                ID_SPEC_VS_VERIF             : ENABLED
# UVVM:      --------------------------------------------------------------------------------------------------------------------------------------------------------------------
# UVVM:      
# UVVM: ID_LOG_MSG_CTRL                    0.0 ns  TB seq.                        enable_log_msg(ALL_MESSAGES). 
# UVVM: 
# UVVM: 
# UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Start Simulation of TB for IRQC
# UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# UVVM: ID_SEQUENCER_SUB                   0.0 ns  TB seq.                        All inputs set passive
# UVVM: ID_CLOCK_GEN                       0.0 ns  TB seq.                        Starting clock IRQC TB clock
# UVVM: ID_GEN_PULSE                     100.0 ns  TB seq.                        Pulsed to 1 for 100 ns. 'Pulsed reset-signal - active for 10T'
# UVVM: ID_POS_ACK                       100.0 ns  TB seq.                        check_value() => OK, for boolean true. 'Must be at least 1 interrupt source'
# UVVM: ID_POS_ACK                       100.0 ns  TB seq.                        check_value() => OK, for boolean true. 'This TB is only checking IRQC with up to 8 interrupt
# UVVM:                                                                           sources'
# UVVM: 
# UVVM: 
# UVVM: ID_LOG_HDR                       100.0 ns  TB seq.                        Check defaults on output ports
# UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# UVVM: ID_POS_ACK                       100.0 ns  TB seq.                        check_value() => OK, for std_logic '0' (exp: '0'). 'Interrupt to CPU must be default inactive'
# UVVM: ID_POS_ACK                       100.0 ns  TB seq.                        check_value() => OK, for slv x"00"'. 'Register data bus output must be default passive'
# UVVM: 
# UVVM: 
# UVVM: ID_LOG_HDR                       100.0 ns  TB seq.                        Check register defaults and access (write + read)
# UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# UVVM: ID_SEQUENCER                     100.0 ns  TB seq.                        
# UVVM:                                                                           Checking Register defaults
# UVVM: ID_BFM                           113.0 ns  TB seq.                        sbi_check(A:x"0", x"00")=> OK, read data = x"00". 'IRR default'
# UVVM: ID_BFM                           123.0 ns  TB seq.                        sbi_check(A:x"1", x"00")=> OK, read data = x"00". 'IER default'
# UVVM: ID_BFM                           133.0 ns  TB seq.                        sbi_check(A:x"4", x"00")=> OK, read data = x"00". 'IPR default'
# UVVM: ID_BFM                           143.0 ns  TB seq.                        sbi_check(A:x"7", x"00")=> OK, read data = x"00". 'IRQ2CPU_ALLOWED default'
# UVVM: ID_SEQUENCER                     143.0 ns  TB seq.                        
# UVVM:                                                                           Checking Register Write/Read
# UVVM: ID_BFM                           153.0 ns  TB seq.                        sbi_write(A:x"1", x"15") completed. 'IER'
# UVVM: ID_BFM                           163.0 ns  TB seq.                        sbi_check(A:x"1", x"15")=> OK, read data = x"15". 'IER pure readback'
# UVVM: ID_BFM                           173.0 ns  TB seq.                        sbi_write(A:x"1", x"2A") completed. 'IER'
# UVVM: ID_BFM                           183.0 ns  TB seq.                        sbi_check(A:x"1", x"2A")=> OK, read data = x"2A". 'IER pure readback'
# UVVM: ID_BFM                           193.0 ns  TB seq.                        sbi_write(A:x"1", x"00") completed. 'IER'
# UVVM: ID_BFM                           203.0 ns  TB seq.                        sbi_check(A:x"1", x"00")=> OK, read data = x"00". 'IER pure readback'
# UVVM: 
# UVVM: 
# UVVM: ID_LOG_HDR                       203.0 ns  TB seq.                        Check register trigger/clear mechanism
# UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# UVVM: ID_BFM                           213.0 ns  TB seq.                        sbi_write(A:x"2", x"2A") completed. 'ITR : Set interrupts'
# UVVM: ID_BFM                           223.0 ns  TB seq.                        sbi_check(A:x"0", x"2A")=> OK, read data = x"2A". 'IRR'
# UVVM: ID_BFM                           233.0 ns  TB seq.                        sbi_write(A:x"2", x"15") completed. 'ITR : Set more interrupts'
# UVVM: ID_BFM                           243.0 ns  TB seq.                        sbi_check(A:x"0", x"3F")=> OK, read data = x"3F". 'IRR'
# UVVM: ID_BFM                           253.0 ns  TB seq.                        sbi_write(A:x"3", x"31") completed. 'ICR : Clear interrupts'
# UVVM: ID_BFM                           263.0 ns  TB seq.                        sbi_check(A:x"0", x"0E")=> OK, read data = x"E". 'IRR'
# UVVM: ID_BFM                           273.0 ns  TB seq.                        sbi_write(A:x"3", x"05") completed. 'ICR : Clear interrupts'
# UVVM: ID_BFM                           283.0 ns  TB seq.                        sbi_check(A:x"0", x"0A")=> OK, read data = x"A". 'IRR'
# UVVM: ID_BFM                           293.0 ns  TB seq.                        sbi_write(A:x"2", x"15") completed. 'ITR : Set more interrupts'
# UVVM: ID_BFM                           303.0 ns  TB seq.                        sbi_check(A:x"0", x"1F")=> OK, read data = x"1F". 'IRR'
# UVVM: ID_BFM                           313.0 ns  TB seq.                        sbi_write(A:x"3", x"1F") completed. 'ICR : Clear interrupts'
# UVVM: ID_BFM                           323.0 ns  TB seq.                        sbi_check(A:x"0", x"00")=> OK, read data = x"00". 'IRR'
# UVVM: 
# UVVM: 
# UVVM: ID_LOG_HDR                       323.0 ns  TB seq.                        Check interrupt sources, IER, IPR and irq2cpu
# UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# UVVM: ID_SEQUENCER                     323.0 ns  TB seq.                        
# UVVM:                                                                           Checking interrupts and IRR
# UVVM: ID_BFM                           333.0 ns  TB seq.                        sbi_write(A:x"3", x"3F") completed. 'ICR : Clear all interrupts'
# UVVM: ID_GEN_PULSE                     345.0 ns  TB seq.                        Pulsed to x"2A" for 1 clk cycles. 'Pulse irq_source 1T'
# UVVM: ID_BFM                           353.0 ns  TB seq.                        sbi_check(A:x"0", x"2A")=> OK, read data = x"2A". 'IRR after irq pulses'
# UVVM: ID_GEN_PULSE                     365.0 ns  TB seq.                        Pulsed to x"01" for 1 clk cycles. 'Add more interrupts'
# UVVM: ID_BFM                           373.0 ns  TB seq.                        sbi_check(A:x"0", x"2B")=> OK, read data = x"2B". 'IRR after irq pulses'
# UVVM: ID_GEN_PULSE                     385.0 ns  TB seq.                        Pulsed to x"21" for 1 clk cycles. 'Repeat same interrupts'
# UVVM: ID_BFM                           393.0 ns  TB seq.                        sbi_check(A:x"0", x"2B")=> OK, read data = x"2B". 'IRR after irq pulses'
# UVVM: ID_GEN_PULSE                     405.0 ns  TB seq.                        Pulsed to x"14" for 1 clk cycles. 'Add remaining interrupts'
# UVVM: ID_BFM                           413.0 ns  TB seq.                        sbi_check(A:x"0", x"3F")=> OK, read data = x"3F". 'IRR after irq pulses'
# UVVM: ID_BFM                           423.0 ns  TB seq.                        sbi_write(A:x"3", x"2A") completed. 'ICR : Clear half the interrupts'
# UVVM: ID_GEN_PULSE                     435.0 ns  TB seq.                        Pulsed to x"20" for 1 clk cycles. 'Add more interrupts'
# UVVM: ID_BFM                           443.0 ns  TB seq.                        sbi_check(A:x"0", x"35")=> OK, read data = x"35". 'IRR after irq pulses'
# UVVM: ID_BFM                           453.0 ns  TB seq.                        sbi_write(A:x"3", x"3F") completed. 'ICR : Clear all interrupts'
# UVVM: ID_BFM                           463.0 ns  TB seq.                        sbi_check(A:x"0", x"00")=> OK, read data = x"00". 'IRR after clearing all'
# UVVM: ID_SEQUENCER                     463.0 ns  TB seq.                        
# UVVM:                                                                           Checking IER, IPR and irq2cpu
# UVVM: ID_BFM                           473.0 ns  TB seq.                        sbi_write(A:x"3", x"3F") completed. 'ICR : Clear all interrupts'
# UVVM: ID_BFM                           483.0 ns  TB seq.                        sbi_write(A:x"1", x"15") completed. 'IER : Enable some interrupts'
# UVVM: ID_BFM                           493.0 ns  TB seq.                        sbi_write(A:x"2", x"2A") completed. 'ITR : Trigger non-enable interrupts'
# UVVM: ID_BFM                           503.0 ns  TB seq.                        sbi_check(A:x"4", x"00")=> OK, read data = x"00". 'IPR should not be active'
# UVVM: ID_BFM                           513.0 ns  TB seq.                        sbi_check(A:x"7", x"00")=> OK, read data = x"00". 'IRQ2CPU_ALLOWED should not be active'
# UVVM: ID_BFM                           523.0 ns  TB seq.                        sbi_write(A:x"5", x"01") completed. 'IRQ2CPU_ENA : Enable main interrupt to CPU'
# UVVM: ID_BFM                           533.0 ns  TB seq.                        sbi_check(A:x"7", x"01")=> OK, read data = x"1". 'IRQ2CPU_ALLOWED should now be active'
# UVVM: ID_POS_ACK                       533.0 ns  TB seq.                        check_value() => OK, for std_logic '0' (exp: '0'). 'Interrupt to CPU must still be inactive'
# UVVM: ID_POS_ACK                       533.0 ns  TB seq.                        check_stable() => OK. Stable at 0. 'No spikes allowed on irq2cpu'
# UVVM: ID_GEN_PULSE                     545.0 ns  TB seq.                        Pulsed to x"01" for 1 clk cycles. 'Add a single enabled interrupt'
# UVVM: ID_POS_ACK                       545.0 ns  TB seq.                        await_value(std_logic 1, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt expected
# UVVM:                                                                           immediately'
# UVVM: ID_BFM                           553.0 ns  TB seq.                        sbi_check(A:x"0", x"2B")=> OK, read data = x"2B". 'IRR should now be active'
# UVVM: ID_BFM                           563.0 ns  TB seq.                        sbi_check(A:x"4", x"01")=> OK, read data = x"1". 'IPR should now be active'
# UVVM: ID_SEQUENCER                     563.0 ns  TB seq.                        
# UVVM:                                                                           More details checked in the autonomy section below
# UVVM: ID_POS_ACK                       563.0 ns  TB seq.                        check_value() => OK, for std_logic '1' (exp: '1'). 'Interrupt to CPU must still be active'
# UVVM: ID_POS_ACK                       563.0 ns  TB seq.                        check_stable() => OK. Stable at 1. 'No spikes allowed on irq2cpu'
# UVVM: 
# UVVM: 
# UVVM: ID_LOG_HDR                       563.0 ns  TB seq.                        Check autonomy for all interrupts
# UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# UVVM: ID_BFM                           573.0 ns  TB seq.                        sbi_write(A:x"3", x"3F") completed. 'ICR : Clear all interrupts'
# UVVM: ID_BFM                           583.0 ns  TB seq.                        sbi_write(A:x"1", x"3F") completed. 'IER : Disable all interrupts'
# UVVM: ID_BFM                           593.0 ns  TB seq.                        sbi_write(A:x"5", x"01") completed. 'IRQ2CPU_ENA : Allow interrupt to CPU'
# UVVM: ID_SEQUENCER                     593.0 ns  TB seq.                        
# UVVM: ID_SEQUENCER                     593.0 ns  TB seq.                        - Checking irq_source(0) and all corresponding functionality
# UVVM: ID_SEQUENCER                     593.0 ns  TB seq.                        - - Check interrupt activation not affected by non related interrupts or registers
# UVVM: ID_BFM                           603.0 ns  TB seq.                        sbi_write(A:x"1", x"01") completed. 'IER : Enable selected interrupt'
# UVVM: ID_GEN_PULSE                     615.0 ns  TB seq.                        Pulsed to x"3E" for 1 clk cycles. 'Pulse all non-enabled interrupts'
# UVVM: ID_BFM                           623.0 ns  TB seq.                        sbi_write(A:x"2", x"FE") completed. 'ITR : Trigger all non-enabled interrupts'
# UVVM: ID_BFM                           633.0 ns  TB seq.                        sbi_check(A:x"0", x"3E")=> OK, read data = x"3E". 'IRR not yet triggered'
# UVVM: ID_BFM                           643.0 ns  TB seq.                        sbi_check(A:x"4", x"00")=> OK, read data = x"00". 'IPR not yet triggered'
# UVVM: ID_POS_ACK                       643.0 ns  TB seq.                        check_value() => OK, for std_logic '0' (exp: '0'). 'Interrupt to CPU must still be inactive'
# UVVM: ID_POS_ACK                       643.0 ns  TB seq.                        check_stable() => OK. Stable at 0. 'No spikes allowed on irq2cpu'
# UVVM: ID_GEN_PULSE                     655.0 ns  TB seq.                        Pulsed to x"01" for 1 clk cycles. 'Pulse the enabled interrupt'
# UVVM: ID_POS_ACK                       655.0 ns  TB seq.                        await_value(std_logic 1, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt expected
# UVVM:                                                                           immediately'
# UVVM: ID_BFM                           663.0 ns  TB seq.                        sbi_check(A:x"0", x"3F")=> OK, read data = x"3F". 'All IRR triggered'
# UVVM: ID_BFM                           673.0 ns  TB seq.                        sbi_check(A:x"4", x"01")=> OK, read data = x"1". 'IPR triggered for selected'
# UVVM: ID_SEQUENCER                     673.0 ns  TB seq.                        
# UVVM:                                                                           - - Check interrupt deactivation not affected by non related interrupts or registers
# UVVM: ID_BFM                           683.0 ns  TB seq.                        sbi_write(A:x"3", x"FE") completed. 'ICR : Clear all non-enabled interrupts'
# UVVM: ID_BFM                           693.0 ns  TB seq.                        sbi_write(A:x"1", x"3F") completed. 'IER : Enable all interrupts'
# UVVM: ID_BFM                           703.0 ns  TB seq.                        sbi_write(A:x"1", x"01") completed. 'IER : Disable non-selected interrupts'
# UVVM: ID_GEN_PULSE                     715.0 ns  TB seq.                        Pulsed to x"3F" for 1 clk cycles. 'Pulse all interrupts'
# UVVM: ID_BFM                           723.0 ns  TB seq.                        sbi_write(A:x"2", x"FF") completed. 'ITR : Trigger all interrupts'
# UVVM: ID_POS_ACK                       723.0 ns  TB seq.                        check_stable() => OK. Stable at 1. 'No spikes allowed on irq2cpu (='1')'
# UVVM: ID_BFM                           733.0 ns  TB seq.                        sbi_write(A:x"1", x"FE") completed. 'IER : Enable all interrupts but disable selected'
# UVVM: ID_POS_ACK                       733.0 ns  TB seq.                        check_value() => OK, for std_logic '1' (exp: '1'). 'Interrupt to CPU still active'
# UVVM: ID_BFM                           743.0 ns  TB seq.                        sbi_check(A:x"0", x"3F")=> OK, read data = x"3F". 'IRR still active for all'
# UVVM: ID_BFM                           753.0 ns  TB seq.                        sbi_write(A:x"3", x"FE") completed. 'ICR : Clear all non-enabled interrupts'
# UVVM: ID_POS_ACK                       753.0 ns  TB seq.                        await_value(std_logic 0, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt
# UVVM:                                                                           deactivation expected immediately'
# UVVM: ID_BFM                           763.0 ns  TB seq.                        sbi_write(A:x"1", x"01") completed. 'IER : Re-enable selected interrupt'
# UVVM: ID_POS_ACK                       763.0 ns  TB seq.                        await_value(std_logic 1, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt
# UVVM:                                                                           reactivation expected immediately'
# UVVM: ID_BFM                           773.0 ns  TB seq.                        sbi_check(A:x"4", x"01")=> OK, read data = x"1". 'IPR still active for selected'
# UVVM: ID_BFM                           783.0 ns  TB seq.                        sbi_write(A:x"3", x"01") completed. 'ICR : Clear selected interrupt'
# UVVM: ID_POS_ACK                       783.0 ns  TB seq.                        check_value() => OK, for std_logic '0' (exp: '0'). 'Interrupt to CPU must go inactive'
# UVVM: ID_BFM                           793.0 ns  TB seq.                        sbi_check(A:x"0", x"00")=> OK, read data = x"00". 'IRR all inactive'
# UVVM: ID_BFM                           803.0 ns  TB seq.                        sbi_check(A:x"4", x"00")=> OK, read data = x"00". 'IPR all inactive'
# UVVM: ID_BFM                           813.0 ns  TB seq.                        sbi_write(A:x"1", x"00") completed. 'IER : Disable all interrupts'
# UVVM: ID_SEQUENCER                     813.0 ns  TB seq.                        
# UVVM: ID_SEQUENCER                     813.0 ns  TB seq.                        - Checking irq_source(1) and all corresponding functionality
# UVVM: ID_SEQUENCER                     813.0 ns  TB seq.                        - - Check interrupt activation not affected by non related interrupts or registers
# UVVM: ID_BFM                           823.0 ns  TB seq.                        sbi_write(A:x"1", x"02") completed. 'IER : Enable selected interrupt'
# UVVM: ID_GEN_PULSE                     835.0 ns  TB seq.                        Pulsed to x"3D" for 1 clk cycles. 'Pulse all non-enabled interrupts'
# UVVM: ID_BFM                           843.0 ns  TB seq.                        sbi_write(A:x"2", x"FD") completed. 'ITR : Trigger all non-enabled interrupts'
# UVVM: ID_BFM                           853.0 ns  TB seq.                        sbi_check(A:x"0", x"3D")=> OK, read data = x"3D". 'IRR not yet triggered'
# UVVM: ID_BFM                           863.0 ns  TB seq.                        sbi_check(A:x"4", x"00")=> OK, read data = x"00". 'IPR not yet triggered'
# UVVM: ID_POS_ACK                       863.0 ns  TB seq.                        check_value() => OK, for std_logic '0' (exp: '0'). 'Interrupt to CPU must still be inactive'
# UVVM: ID_POS_ACK                       863.0 ns  TB seq.                        check_stable() => OK. Stable at 0. 'No spikes allowed on irq2cpu'
# UVVM: ID_GEN_PULSE                     875.0 ns  TB seq.                        Pulsed to x"02" for 1 clk cycles. 'Pulse the enabled interrupt'
# UVVM: ID_POS_ACK                       875.0 ns  TB seq.                        await_value(std_logic 1, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt expected
# UVVM:                                                                           immediately'
# UVVM: ID_BFM                           883.0 ns  TB seq.                        sbi_check(A:x"0", x"3F")=> OK, read data = x"3F". 'All IRR triggered'
# UVVM: ID_BFM                           893.0 ns  TB seq.                        sbi_check(A:x"4", x"02")=> OK, read data = x"2". 'IPR triggered for selected'
# UVVM: ID_SEQUENCER                     893.0 ns  TB seq.                        
# UVVM:                                                                           - - Check interrupt deactivation not affected by non related interrupts or registers
# UVVM: ID_BFM                           903.0 ns  TB seq.                        sbi_write(A:x"3", x"FD") completed. 'ICR : Clear all non-enabled interrupts'
# UVVM: ID_BFM                           913.0 ns  TB seq.                        sbi_write(A:x"1", x"3F") completed. 'IER : Enable all interrupts'
# UVVM: ID_BFM                           923.0 ns  TB seq.                        sbi_write(A:x"1", x"02") completed. 'IER : Disable non-selected interrupts'
# UVVM: ID_GEN_PULSE                     935.0 ns  TB seq.                        Pulsed to x"3F" for 1 clk cycles. 'Pulse all interrupts'
# UVVM: ID_BFM                           943.0 ns  TB seq.                        sbi_write(A:x"2", x"FF") completed. 'ITR : Trigger all interrupts'
# UVVM: ID_POS_ACK                       943.0 ns  TB seq.                        check_stable() => OK. Stable at 1. 'No spikes allowed on irq2cpu (='1')'
# UVVM: ID_BFM                           953.0 ns  TB seq.                        sbi_write(A:x"1", x"FD") completed. 'IER : Enable all interrupts but disable selected'
# UVVM: ID_POS_ACK                       953.0 ns  TB seq.                        check_value() => OK, for std_logic '1' (exp: '1'). 'Interrupt to CPU still active'
# UVVM: ID_BFM                           963.0 ns  TB seq.                        sbi_check(A:x"0", x"3F")=> OK, read data = x"3F". 'IRR still active for all'
# UVVM: ID_BFM                           973.0 ns  TB seq.                        sbi_write(A:x"3", x"FD") completed. 'ICR : Clear all non-enabled interrupts'
# UVVM: ID_POS_ACK                       973.0 ns  TB seq.                        await_value(std_logic 0, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt
# UVVM:                                                                           deactivation expected immediately'
# UVVM: ID_BFM                           983.0 ns  TB seq.                        sbi_write(A:x"1", x"02") completed. 'IER : Re-enable selected interrupt'
# UVVM: ID_POS_ACK                       983.0 ns  TB seq.                        await_value(std_logic 1, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt
# UVVM:                                                                           reactivation expected immediately'
# UVVM: ID_BFM                           993.0 ns  TB seq.                        sbi_check(A:x"4", x"02")=> OK, read data = x"2". 'IPR still active for selected'
# UVVM: ID_BFM                          1003.0 ns  TB seq.                        sbi_write(A:x"3", x"02") completed. 'ICR : Clear selected interrupt'
# UVVM: ID_POS_ACK                      1003.0 ns  TB seq.                        check_value() => OK, for std_logic '0' (exp: '0'). 'Interrupt to CPU must go inactive'
# UVVM: ID_BFM                          1013.0 ns  TB seq.                        sbi_check(A:x"0", x"00")=> OK, read data = x"00". 'IRR all inactive'
# UVVM: ID_BFM                          1023.0 ns  TB seq.                        sbi_check(A:x"4", x"00")=> OK, read data = x"00". 'IPR all inactive'
# UVVM: ID_BFM                          1033.0 ns  TB seq.                        sbi_write(A:x"1", x"00") completed. 'IER : Disable all interrupts'
# UVVM: ID_SEQUENCER                    1033.0 ns  TB seq.                        
# UVVM: ID_SEQUENCER                    1033.0 ns  TB seq.                        - Checking irq_source(2) and all corresponding functionality
# UVVM: ID_SEQUENCER                    1033.0 ns  TB seq.                        - - Check interrupt activation not affected by non related interrupts or registers
# UVVM: ID_BFM                          1043.0 ns  TB seq.                        sbi_write(A:x"1", x"04") completed. 'IER : Enable selected interrupt'
# UVVM: ID_GEN_PULSE                    1055.0 ns  TB seq.                        Pulsed to x"3B" for 1 clk cycles. 'Pulse all non-enabled interrupts'
# UVVM: ID_BFM                          1063.0 ns  TB seq.                        sbi_write(A:x"2", x"FB") completed. 'ITR : Trigger all non-enabled interrupts'
# UVVM: ID_BFM                          1073.0 ns  TB seq.                        sbi_check(A:x"0", x"3B")=> OK, read data = x"3B". 'IRR not yet triggered'
# UVVM: ID_BFM                          1083.0 ns  TB seq.                        sbi_check(A:x"4", x"00")=> OK, read data = x"00". 'IPR not yet triggered'
# UVVM: ID_POS_ACK                      1083.0 ns  TB seq.                        check_value() => OK, for std_logic '0' (exp: '0'). 'Interrupt to CPU must still be inactive'
# UVVM: ID_POS_ACK                      1083.0 ns  TB seq.                        check_stable() => OK. Stable at 0. 'No spikes allowed on irq2cpu'
# UVVM: ID_GEN_PULSE                    1095.0 ns  TB seq.                        Pulsed to x"04" for 1 clk cycles. 'Pulse the enabled interrupt'
# UVVM: ID_POS_ACK                      1095.0 ns  TB seq.                        await_value(std_logic 1, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt expected
# UVVM:                                                                           immediately'
# UVVM: ID_BFM                          1103.0 ns  TB seq.                        sbi_check(A:x"0", x"3F")=> OK, read data = x"3F". 'All IRR triggered'
# UVVM: ID_BFM                          1113.0 ns  TB seq.                        sbi_check(A:x"4", x"04")=> OK, read data = x"4". 'IPR triggered for selected'
# UVVM: ID_SEQUENCER                    1113.0 ns  TB seq.                        
# UVVM:                                                                           - - Check interrupt deactivation not affected by non related interrupts or registers
# UVVM: ID_BFM                          1123.0 ns  TB seq.                        sbi_write(A:x"3", x"FB") completed. 'ICR : Clear all non-enabled interrupts'
# UVVM: ID_BFM                          1133.0 ns  TB seq.                        sbi_write(A:x"1", x"3F") completed. 'IER : Enable all interrupts'
# UVVM: ID_BFM                          1143.0 ns  TB seq.                        sbi_write(A:x"1", x"04") completed. 'IER : Disable non-selected interrupts'
# UVVM: ID_GEN_PULSE                    1155.0 ns  TB seq.                        Pulsed to x"3F" for 1 clk cycles. 'Pulse all interrupts'
# UVVM: ID_BFM                          1163.0 ns  TB seq.                        sbi_write(A:x"2", x"FF") completed. 'ITR : Trigger all interrupts'
# UVVM: ID_POS_ACK                      1163.0 ns  TB seq.                        check_stable() => OK. Stable at 1. 'No spikes allowed on irq2cpu (='1')'
# UVVM: ID_BFM                          1173.0 ns  TB seq.                        sbi_write(A:x"1", x"FB") completed. 'IER : Enable all interrupts but disable selected'
# UVVM: ID_POS_ACK                      1173.0 ns  TB seq.                        check_value() => OK, for std_logic '1' (exp: '1'). 'Interrupt to CPU still active'
# UVVM: ID_BFM                          1183.0 ns  TB seq.                        sbi_check(A:x"0", x"3F")=> OK, read data = x"3F". 'IRR still active for all'
# UVVM: ID_BFM                          1193.0 ns  TB seq.                        sbi_write(A:x"3", x"FB") completed. 'ICR : Clear all non-enabled interrupts'
# UVVM: ID_POS_ACK                      1193.0 ns  TB seq.                        await_value(std_logic 0, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt
# UVVM:                                                                           deactivation expected immediately'
# UVVM: ID_BFM                          1203.0 ns  TB seq.                        sbi_write(A:x"1", x"04") completed. 'IER : Re-enable selected interrupt'
# UVVM: ID_POS_ACK                      1203.0 ns  TB seq.                        await_value(std_logic 1, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt
# UVVM:                                                                           reactivation expected immediately'
# UVVM: ID_BFM                          1213.0 ns  TB seq.                        sbi_check(A:x"4", x"04")=> OK, read data = x"4". 'IPR still active for selected'
# UVVM: ID_BFM                          1223.0 ns  TB seq.                        sbi_write(A:x"3", x"04") completed. 'ICR : Clear selected interrupt'
# UVVM: ID_POS_ACK                      1223.0 ns  TB seq.                        check_value() => OK, for std_logic '0' (exp: '0'). 'Interrupt to CPU must go inactive'
# UVVM: ID_BFM                          1233.0 ns  TB seq.                        sbi_check(A:x"0", x"00")=> OK, read data = x"00". 'IRR all inactive'
# UVVM: ID_BFM                          1243.0 ns  TB seq.                        sbi_check(A:x"4", x"00")=> OK, read data = x"00". 'IPR all inactive'
# UVVM: ID_BFM                          1253.0 ns  TB seq.                        sbi_write(A:x"1", x"00") completed. 'IER : Disable all interrupts'
# UVVM: ID_SEQUENCER                    1253.0 ns  TB seq.                        
# UVVM: ID_SEQUENCER                    1253.0 ns  TB seq.                        - Checking irq_source(3) and all corresponding functionality
# UVVM: ID_SEQUENCER                    1253.0 ns  TB seq.                        - - Check interrupt activation not affected by non related interrupts or registers
# UVVM: ID_BFM                          1263.0 ns  TB seq.                        sbi_write(A:x"1", x"08") completed. 'IER : Enable selected interrupt'
# UVVM: ID_GEN_PULSE                    1275.0 ns  TB seq.                        Pulsed to x"37" for 1 clk cycles. 'Pulse all non-enabled interrupts'
# UVVM: ID_BFM                          1283.0 ns  TB seq.                        sbi_write(A:x"2", x"F7") completed. 'ITR : Trigger all non-enabled interrupts'
# UVVM: ID_BFM                          1293.0 ns  TB seq.                        sbi_check(A:x"0", x"37")=> OK, read data = x"37". 'IRR not yet triggered'
# UVVM: ID_BFM                          1303.0 ns  TB seq.                        sbi_check(A:x"4", x"00")=> OK, read data = x"00". 'IPR not yet triggered'
# UVVM: ID_POS_ACK                      1303.0 ns  TB seq.                        check_value() => OK, for std_logic '0' (exp: '0'). 'Interrupt to CPU must still be inactive'
# UVVM: ID_POS_ACK                      1303.0 ns  TB seq.                        check_stable() => OK. Stable at 0. 'No spikes allowed on irq2cpu'
# UVVM: ID_GEN_PULSE                    1315.0 ns  TB seq.                        Pulsed to x"08" for 1 clk cycles. 'Pulse the enabled interrupt'
# UVVM: ID_POS_ACK                      1315.0 ns  TB seq.                        await_value(std_logic 1, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt expected
# UVVM:                                                                           immediately'
# UVVM: ID_BFM                          1323.0 ns  TB seq.                        sbi_check(A:x"0", x"3F")=> OK, read data = x"3F". 'All IRR triggered'
# UVVM: ID_BFM                          1333.0 ns  TB seq.                        sbi_check(A:x"4", x"08")=> OK, read data = x"8". 'IPR triggered for selected'
# UVVM: ID_SEQUENCER                    1333.0 ns  TB seq.                        
# UVVM:                                                                           - - Check interrupt deactivation not affected by non related interrupts or registers
# UVVM: ID_BFM                          1343.0 ns  TB seq.                        sbi_write(A:x"3", x"F7") completed. 'ICR : Clear all non-enabled interrupts'
# UVVM: ID_BFM                          1353.0 ns  TB seq.                        sbi_write(A:x"1", x"3F") completed. 'IER : Enable all interrupts'
# UVVM: ID_BFM                          1363.0 ns  TB seq.                        sbi_write(A:x"1", x"08") completed. 'IER : Disable non-selected interrupts'
# UVVM: ID_GEN_PULSE                    1375.0 ns  TB seq.                        Pulsed to x"3F" for 1 clk cycles. 'Pulse all interrupts'
# UVVM: ID_BFM                          1383.0 ns  TB seq.                        sbi_write(A:x"2", x"FF") completed. 'ITR : Trigger all interrupts'
# UVVM: ID_POS_ACK                      1383.0 ns  TB seq.                        check_stable() => OK. Stable at 1. 'No spikes allowed on irq2cpu (='1')'
# UVVM: ID_BFM                          1393.0 ns  TB seq.                        sbi_write(A:x"1", x"F7") completed. 'IER : Enable all interrupts but disable selected'
# UVVM: ID_POS_ACK                      1393.0 ns  TB seq.                        check_value() => OK, for std_logic '1' (exp: '1'). 'Interrupt to CPU still active'
# UVVM: ID_BFM                          1403.0 ns  TB seq.                        sbi_check(A:x"0", x"3F")=> OK, read data = x"3F". 'IRR still active for all'
# UVVM: ID_BFM                          1413.0 ns  TB seq.                        sbi_write(A:x"3", x"F7") completed. 'ICR : Clear all non-enabled interrupts'
# UVVM: ID_POS_ACK                      1413.0 ns  TB seq.                        await_value(std_logic 0, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt
# UVVM:                                                                           deactivation expected immediately'
# UVVM: ID_BFM                          1423.0 ns  TB seq.                        sbi_write(A:x"1", x"08") completed. 'IER : Re-enable selected interrupt'
# UVVM: ID_POS_ACK                      1423.0 ns  TB seq.                        await_value(std_logic 1, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt
# UVVM:                                                                           reactivation expected immediately'
# UVVM: ID_BFM                          1433.0 ns  TB seq.                        sbi_check(A:x"4", x"08")=> OK, read data = x"8". 'IPR still active for selected'
# UVVM: ID_BFM                          1443.0 ns  TB seq.                        sbi_write(A:x"3", x"08") completed. 'ICR : Clear selected interrupt'
# UVVM: ID_POS_ACK                      1443.0 ns  TB seq.                        check_value() => OK, for std_logic '0' (exp: '0'). 'Interrupt to CPU must go inactive'
# UVVM: ID_BFM                          1453.0 ns  TB seq.                        sbi_check(A:x"0", x"00")=> OK, read data = x"00". 'IRR all inactive'
# UVVM: ID_BFM                          1463.0 ns  TB seq.                        sbi_check(A:x"4", x"00")=> OK, read data = x"00". 'IPR all inactive'
# UVVM: ID_BFM                          1473.0 ns  TB seq.                        sbi_write(A:x"1", x"00") completed. 'IER : Disable all interrupts'
# UVVM: ID_SEQUENCER                    1473.0 ns  TB seq.                        
# UVVM: ID_SEQUENCER                    1473.0 ns  TB seq.                        - Checking irq_source(4) and all corresponding functionality
# UVVM: ID_SEQUENCER                    1473.0 ns  TB seq.                        - - Check interrupt activation not affected by non related interrupts or registers
# UVVM: ID_BFM                          1483.0 ns  TB seq.                        sbi_write(A:x"1", x"10") completed. 'IER : Enable selected interrupt'
# UVVM: ID_GEN_PULSE                    1495.0 ns  TB seq.                        Pulsed to x"2F" for 1 clk cycles. 'Pulse all non-enabled interrupts'
# UVVM: ID_BFM                          1503.0 ns  TB seq.                        sbi_write(A:x"2", x"EF") completed. 'ITR : Trigger all non-enabled interrupts'
# UVVM: ID_BFM                          1513.0 ns  TB seq.                        sbi_check(A:x"0", x"2F")=> OK, read data = x"2F". 'IRR not yet triggered'
# UVVM: ID_BFM                          1523.0 ns  TB seq.                        sbi_check(A:x"4", x"00")=> OK, read data = x"00". 'IPR not yet triggered'
# UVVM: ID_POS_ACK                      1523.0 ns  TB seq.                        check_value() => OK, for std_logic '0' (exp: '0'). 'Interrupt to CPU must still be inactive'
# UVVM: ID_POS_ACK                      1523.0 ns  TB seq.                        check_stable() => OK. Stable at 0. 'No spikes allowed on irq2cpu'
# UVVM: ID_GEN_PULSE                    1535.0 ns  TB seq.                        Pulsed to x"10" for 1 clk cycles. 'Pulse the enabled interrupt'
# UVVM: ID_POS_ACK                      1535.0 ns  TB seq.                        await_value(std_logic 1, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt expected
# UVVM:                                                                           immediately'
# UVVM: ID_BFM                          1543.0 ns  TB seq.                        sbi_check(A:x"0", x"3F")=> OK, read data = x"3F". 'All IRR triggered'
# UVVM: ID_BFM                          1553.0 ns  TB seq.                        sbi_check(A:x"4", x"10")=> OK, read data = x"10". 'IPR triggered for selected'
# UVVM: ID_SEQUENCER                    1553.0 ns  TB seq.                        
# UVVM:                                                                           - - Check interrupt deactivation not affected by non related interrupts or registers
# UVVM: ID_BFM                          1563.0 ns  TB seq.                        sbi_write(A:x"3", x"EF") completed. 'ICR : Clear all non-enabled interrupts'
# UVVM: ID_BFM                          1573.0 ns  TB seq.                        sbi_write(A:x"1", x"3F") completed. 'IER : Enable all interrupts'
# UVVM: ID_BFM                          1583.0 ns  TB seq.                        sbi_write(A:x"1", x"10") completed. 'IER : Disable non-selected interrupts'
# UVVM: ID_GEN_PULSE                    1595.0 ns  TB seq.                        Pulsed to x"3F" for 1 clk cycles. 'Pulse all interrupts'
# UVVM: ID_BFM                          1603.0 ns  TB seq.                        sbi_write(A:x"2", x"FF") completed. 'ITR : Trigger all interrupts'
# UVVM: ID_POS_ACK                      1603.0 ns  TB seq.                        check_stable() => OK. Stable at 1. 'No spikes allowed on irq2cpu (='1')'
# UVVM: ID_BFM                          1613.0 ns  TB seq.                        sbi_write(A:x"1", x"EF") completed. 'IER : Enable all interrupts but disable selected'
# UVVM: ID_POS_ACK                      1613.0 ns  TB seq.                        check_value() => OK, for std_logic '1' (exp: '1'). 'Interrupt to CPU still active'
# UVVM: ID_BFM                          1623.0 ns  TB seq.                        sbi_check(A:x"0", x"3F")=> OK, read data = x"3F". 'IRR still active for all'
# UVVM: ID_BFM                          1633.0 ns  TB seq.                        sbi_write(A:x"3", x"EF") completed. 'ICR : Clear all non-enabled interrupts'
# UVVM: ID_POS_ACK                      1633.0 ns  TB seq.                        await_value(std_logic 0, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt
# UVVM:                                                                           deactivation expected immediately'
# UVVM: ID_BFM                          1643.0 ns  TB seq.                        sbi_write(A:x"1", x"10") completed. 'IER : Re-enable selected interrupt'
# UVVM: ID_POS_ACK                      1643.0 ns  TB seq.                        await_value(std_logic 1, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt
# UVVM:                                                                           reactivation expected immediately'
# UVVM: ID_BFM                          1653.0 ns  TB seq.                        sbi_check(A:x"4", x"10")=> OK, read data = x"10". 'IPR still active for selected'
# UVVM: ID_BFM                          1663.0 ns  TB seq.                        sbi_write(A:x"3", x"10") completed. 'ICR : Clear selected interrupt'
# UVVM: ID_POS_ACK                      1663.0 ns  TB seq.                        check_value() => OK, for std_logic '0' (exp: '0'). 'Interrupt to CPU must go inactive'
# UVVM: ID_BFM                          1673.0 ns  TB seq.                        sbi_check(A:x"0", x"00")=> OK, read data = x"00". 'IRR all inactive'
# UVVM: ID_BFM                          1683.0 ns  TB seq.                        sbi_check(A:x"4", x"00")=> OK, read data = x"00". 'IPR all inactive'
# UVVM: ID_BFM                          1693.0 ns  TB seq.                        sbi_write(A:x"1", x"00") completed. 'IER : Disable all interrupts'
# UVVM: ID_SEQUENCER                    1693.0 ns  TB seq.                        
# UVVM: ID_SEQUENCER                    1693.0 ns  TB seq.                        - Checking irq_source(5) and all corresponding functionality
# UVVM: ID_SEQUENCER                    1693.0 ns  TB seq.                        - - Check interrupt activation not affected by non related interrupts or registers
# UVVM: ID_BFM                          1703.0 ns  TB seq.                        sbi_write(A:x"1", x"20") completed. 'IER : Enable selected interrupt'
# UVVM: ID_GEN_PULSE                    1715.0 ns  TB seq.                        Pulsed to x"1F" for 1 clk cycles. 'Pulse all non-enabled interrupts'
# UVVM: ID_BFM                          1723.0 ns  TB seq.                        sbi_write(A:x"2", x"DF") completed. 'ITR : Trigger all non-enabled interrupts'
# UVVM: ID_BFM                          1733.0 ns  TB seq.                        sbi_check(A:x"0", x"1F")=> OK, read data = x"1F". 'IRR not yet triggered'
# UVVM: ID_BFM                          1743.0 ns  TB seq.                        sbi_check(A:x"4", x"00")=> OK, read data = x"00". 'IPR not yet triggered'
# UVVM: ID_POS_ACK                      1743.0 ns  TB seq.                        check_value() => OK, for std_logic '0' (exp: '0'). 'Interrupt to CPU must still be inactive'
# UVVM: ID_POS_ACK                      1743.0 ns  TB seq.                        check_stable() => OK. Stable at 0. 'No spikes allowed on irq2cpu'
# UVVM: ID_GEN_PULSE                    1755.0 ns  TB seq.                        Pulsed to x"20" for 1 clk cycles. 'Pulse the enabled interrupt'
# UVVM: ID_POS_ACK                      1755.0 ns  TB seq.                        await_value(std_logic 1, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt expected
# UVVM:                                                                           immediately'
# UVVM: ID_BFM                          1763.0 ns  TB seq.                        sbi_check(A:x"0", x"3F")=> OK, read data = x"3F". 'All IRR triggered'
# UVVM: ID_BFM                          1773.0 ns  TB seq.                        sbi_check(A:x"4", x"20")=> OK, read data = x"20". 'IPR triggered for selected'
# UVVM: ID_SEQUENCER                    1773.0 ns  TB seq.                        
# UVVM:                                                                           - - Check interrupt deactivation not affected by non related interrupts or registers
# UVVM: ID_BFM                          1783.0 ns  TB seq.                        sbi_write(A:x"3", x"DF") completed. 'ICR : Clear all non-enabled interrupts'
# UVVM: ID_BFM                          1793.0 ns  TB seq.                        sbi_write(A:x"1", x"3F") completed. 'IER : Enable all interrupts'
# UVVM: ID_BFM                          1803.0 ns  TB seq.                        sbi_write(A:x"1", x"20") completed. 'IER : Disable non-selected interrupts'
# UVVM: ID_GEN_PULSE                    1815.0 ns  TB seq.                        Pulsed to x"3F" for 1 clk cycles. 'Pulse all interrupts'
# UVVM: ID_BFM                          1823.0 ns  TB seq.                        sbi_write(A:x"2", x"FF") completed. 'ITR : Trigger all interrupts'
# UVVM: ID_POS_ACK                      1823.0 ns  TB seq.                        check_stable() => OK. Stable at 1. 'No spikes allowed on irq2cpu (='1')'
# UVVM: ID_BFM                          1833.0 ns  TB seq.                        sbi_write(A:x"1", x"DF") completed. 'IER : Enable all interrupts but disable selected'
# UVVM: ID_POS_ACK                      1833.0 ns  TB seq.                        check_value() => OK, for std_logic '1' (exp: '1'). 'Interrupt to CPU still active'
# UVVM: ID_BFM                          1843.0 ns  TB seq.                        sbi_check(A:x"0", x"3F")=> OK, read data = x"3F". 'IRR still active for all'
# UVVM: ID_BFM                          1853.0 ns  TB seq.                        sbi_write(A:x"3", x"DF") completed. 'ICR : Clear all non-enabled interrupts'
# UVVM: ID_POS_ACK                      1853.0 ns  TB seq.                        await_value(std_logic 0, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt
# UVVM:                                                                           deactivation expected immediately'
# UVVM: ID_BFM                          1863.0 ns  TB seq.                        sbi_write(A:x"1", x"20") completed. 'IER : Re-enable selected interrupt'
# UVVM: ID_POS_ACK                      1863.0 ns  TB seq.                        await_value(std_logic 1, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt
# UVVM:                                                                           reactivation expected immediately'
# UVVM: ID_BFM                          1873.0 ns  TB seq.                        sbi_check(A:x"4", x"20")=> OK, read data = x"20". 'IPR still active for selected'
# UVVM: ID_BFM                          1883.0 ns  TB seq.                        sbi_write(A:x"3", x"20") completed. 'ICR : Clear selected interrupt'
# UVVM: ID_POS_ACK                      1883.0 ns  TB seq.                        check_value() => OK, for std_logic '0' (exp: '0'). 'Interrupt to CPU must go inactive'
# UVVM: ID_BFM                          1893.0 ns  TB seq.                        sbi_check(A:x"0", x"00")=> OK, read data = x"00". 'IRR all inactive'
# UVVM: ID_BFM                          1903.0 ns  TB seq.                        sbi_check(A:x"4", x"00")=> OK, read data = x"00". 'IPR all inactive'
# UVVM: ID_BFM                          1913.0 ns  TB seq.                        sbi_write(A:x"1", x"00") completed. 'IER : Disable all interrupts'
# UVVM:      
# UVVM:      ====================================================================================================================================================================
# UVVM:      *** INTERMEDIATE SUMMARY OF ALL ALERTS ***
# UVVM:      ====================================================================================================================================================================
# UVVM:                                REGARDED   EXPECTED  IGNORED      Comment?
# UVVM:                NOTE         :      0         0         0         ok
# UVVM:                TB_NOTE      :      0         0         0         ok
# UVVM:                WARNING      :      0         0         0         ok
# UVVM:                TB_WARNING   :      0         0         0         ok
# UVVM:                MANUAL_CHECK :      0         0         0         ok
# UVVM:                ERROR        :      0         0         0         ok
# UVVM:                TB_ERROR     :      0         0         0         ok
# UVVM:                FAILURE      :      0         0         0         ok
# UVVM:                TB_FAILURE   :      0         0         0         ok
# UVVM:      ====================================================================================================================================================================
# UVVM:      
# UVVM: 
# UVVM: 
# UVVM: ID_LOG_HDR                      1913.0 ns  TB seq.                        Check irq acknowledge and re-enable
# UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# UVVM: ID_SEQUENCER                    1913.0 ns  TB seq.                        - Activate interrupt
# UVVM: ID_BFM                          1923.0 ns  TB seq.                        sbi_write(A:x"2", x"20") completed. 'ICR : Set single upper interrupt'
# UVVM: ID_BFM                          1933.0 ns  TB seq.                        sbi_write(A:x"1", x"20") completed. 'IER : Enable single upper interrupts'
# UVVM: ID_BFM                          1943.0 ns  TB seq.                        sbi_write(A:x"5", x"01") completed. 'IRQ2CPU_ENA : Allow interrupt to CPU'
# UVVM: ID_POS_ACK                      1943.0 ns  TB seq.                        await_value(std_logic 1, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt
# UVVM:                                                                           activation expected'
# UVVM: ID_SEQUENCER                    1943.0 ns  TB seq.                        
# UVVM:                                                                           - Try potential malfunction
# UVVM: ID_BFM                          1953.0 ns  TB seq.                        sbi_write(A:x"5", x"01") completed. 'IRQ2CPU_ENA : Allow interrupt to CPU again - should not
# UVVM:                                                                           affect anything'
# UVVM: ID_BFM                          1963.0 ns  TB seq.                        sbi_write(A:x"5", x"00") completed. 'IRQ2CPU_ENA : Set to 0 - should not affect anything'
# UVVM: ID_BFM                          1973.0 ns  TB seq.                        sbi_write(A:x"6", x"00") completed. 'IRQ2CPU_DISABLE : Set to 0 - should not affect anything'
# UVVM: ID_POS_ACK                      1973.0 ns  TB seq.                        check_stable() => OK. Stable at 1. 'No spikes allowed on irq2cpu (='1')'
# UVVM: ID_SEQUENCER                    1973.0 ns  TB seq.                        
# UVVM:                                                                           - Acknowledge and deactivate interrupt
# UVVM: ID_GEN_PULSE                    1985.0 ns  TB seq.                        Pulsed to 1 for 1 clk cycles. 'Pulse irq2cpu_ack'
# UVVM: ID_POS_ACK                      1985.0 ns  TB seq.                        await_value(std_logic 0, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt
# UVVM:                                                                           deactivation expected'
# UVVM: ID_SEQUENCER                    1985.0 ns  TB seq.                        
# UVVM:                                                                           - Test for potential malfunction
# UVVM: ID_BFM                          1993.0 ns  TB seq.                        sbi_write(A:x"6", x"01") completed. 'IRQ2CPU_DISABLE : Disable interrupt to CPU again - should
# UVVM:                                                                           not affect anything'
# UVVM: ID_BFM                          2003.0 ns  TB seq.                        sbi_write(A:x"6", x"00") completed. 'IRQ2CPU_DISABLE : Set to 0 - should not affect anything'
# UVVM: ID_BFM                          2013.0 ns  TB seq.                        sbi_write(A:x"5", x"00") completed. 'IRQ2CPU_ENA : Set to 0 - should not affect anything'
# UVVM: ID_BFM                          2023.0 ns  TB seq.                        sbi_write(A:x"2", x"FF") completed. 'ICR : Trigger all interrupts'
# UVVM: ID_BFM                          2033.0 ns  TB seq.                        sbi_write(A:x"1", x"FF") completed. 'IER : Enable all interrupts'
# UVVM: ID_GEN_PULSE                    2045.0 ns  TB seq.                        Pulsed to x"3F" for 1 clk cycles. 'Pulse all interrupts'
# UVVM: ID_GEN_PULSE                    2065.0 ns  TB seq.                        Pulsed to 1 for 1 clk cycles. 'Pulse irq2cpu_ack'
# UVVM: ID_POS_ACK                      2065.0 ns  TB seq.                        check_stable() => OK. Stable at 0. 'No spikes allowed on irq2cpu (='0')'
# UVVM: ID_SEQUENCER                    2065.0 ns  TB seq.                        
# UVVM:                                                                           - Re-/de-activation
# UVVM: ID_BFM                          2073.0 ns  TB seq.                        sbi_write(A:x"5", x"01") completed. 'IRQ2CPU_ENA : Reactivate interrupt to CPU'
# UVVM: ID_POS_ACK                      2073.0 ns  TB seq.                        await_value(std_logic 1, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt
# UVVM:                                                                           reactivation expected'
# UVVM: ID_BFM                          2083.0 ns  TB seq.                        sbi_write(A:x"6", x"01") completed. 'IRQ2CPU_DISABLE : Deactivate interrupt to CPU'
# UVVM: ID_POS_ACK                      2083.0 ns  TB seq.                        await_value(std_logic 0, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt
# UVVM:                                                                           deactivation expected'
# UVVM: ID_BFM                          2093.0 ns  TB seq.                        sbi_write(A:x"5", x"01") completed. 'IRQ2CPU_ENA : Reactivate interrupt to CPU'
# UVVM: ID_POS_ACK                      2093.0 ns  TB seq.                        await_value(std_logic 1, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt
# UVVM:                                                                           reactivation expected'
# UVVM: 
# UVVM: 
# UVVM: ID_LOG_HDR                      2093.0 ns  TB seq.                        Check Reset
# UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# UVVM: ID_SEQUENCER                    2093.0 ns  TB seq.                        - Activate all interrupts
# UVVM: ID_BFM                          2103.0 ns  TB seq.                        sbi_write(A:x"2", x"FF") completed. 'ICR : Set all interrupts'
# UVVM: ID_BFM                          2113.0 ns  TB seq.                        sbi_write(A:x"1", x"FF") completed. 'IER : Enable all interrupts'
# UVVM: ID_BFM                          2123.0 ns  TB seq.                        sbi_write(A:x"5", x"01") completed. 'IRQ2CPU_ENA : Allow interrupt to CPU'
# UVVM: ID_POS_ACK                      2123.0 ns  TB seq.                        await_value(std_logic 1, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt
# UVVM:                                                                           activation expected'
# UVVM: ID_GEN_PULSE                    2135.0 ns  TB seq.                        Pulsed to 1 for 1 clk cycles. 'Pulse reset'
# UVVM: ID_POS_ACK                      2135.0 ns  TB seq.                        await_value(std_logic 0, 0 ns, 10 ns) => OK. Condition occurred after 0 ns. 'Interrupt
# UVVM:                                                                           deactivation'
# UVVM: ID_BFM                          2143.0 ns  TB seq.                        sbi_check(A:x"1", x"00")=> OK, read data = x"00". 'IER all inactive'
# UVVM: ID_BFM                          2153.0 ns  TB seq.                        sbi_check(A:x"0", x"00")=> OK, read data = x"00". 'IRR all inactive'
# UVVM: ID_BFM                          2163.0 ns  TB seq.                        sbi_check(A:x"4", x"00")=> OK, read data = x"00". 'IPR all inactive'
# UVVM:      
# UVVM:      ====================================================================================================================================================================
# UVVM:      *** FINAL SUMMARY OF ALL ALERTS ***
# UVVM:      ====================================================================================================================================================================
# UVVM:                                REGARDED   EXPECTED  IGNORED      Comment?
# UVVM:                NOTE         :      0         0         0         ok
# UVVM:                TB_NOTE      :      0         0         0         ok
# UVVM:                WARNING      :      0         0         0         ok
# UVVM:                TB_WARNING   :      0         0         0         ok
# UVVM:                MANUAL_CHECK :      0         0         0         ok
# UVVM:                ERROR        :      0         0         0         ok
# UVVM:                TB_ERROR     :      0         0         0         ok
# UVVM:                FAILURE      :      0         0         0         ok
# UVVM:                TB_FAILURE   :      0         0         0         ok
# UVVM:      ====================================================================================================================================================================
# UVVM:      >> Simulation SUCCESS: No mismatch between counted and expected serious alerts
# UVVM:      ====================================================================================================================================================================
# UVVM:      
# UVVM:      
# UVVM: 
# UVVM: 
# UVVM: ID_LOG_HDR                      3163.0 ns  TB seq.                        SIMULATION COMPLETED
# UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Break in Process p_main at ../tb/irqc_demo_tb.vhd line 379
quit -f
# End time: 16:08:54 on Mar 31,2020, Elapsed time: 0:00:15
# Errors: 0, Warnings: 0
